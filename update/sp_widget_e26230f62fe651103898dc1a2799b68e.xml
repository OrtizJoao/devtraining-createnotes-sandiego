<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[	api.controller=function() {
		/* widget controller */
		var c = this;
		//selectItem is a function that will be used on html template when we click on a note
		c.selectItem = function(index) {
			//id is the sys_id of each note, according to its index
			var id = c.data.notes[index].sys_id;
			//log the ID of the note
			console.log('Note ID: ' + id);

			/*$rootScope*/
			//Every application has a single root scope. 
			//All other scopes are descendant scopes of the root scope. 
			//Scopes provide separation between the model and the view, 
			//via a mechanism for watching the model for changes. 
			$rootScope.noteID = id;

			/*$emit(name, args)
			Dispatches an event name upwards through the scope hierarchy notifying the registered $rootScope.Scope listeners.
			The event life cycle starts at the scope on which $emit was called. 
			
			All listeners listening for name event on this scope get notified. 
			**IN THIS CASE, THE LISTENER IS IN THE NOTES BODY**
			
			Afterwards, the event traverses upwards toward the root scope and
			calls all registered listeners along the way. 
			
			The event will stop propagating if one of the listeners cancels it.*/
			$rootScope.$emit('selectNote', id);
			
			$rootScope.$on('selectNote', id);
		}
	};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	//Create the notes property on the data object which will contain an array of objects
	data.notes = [];
	//Query the database to find all Note table records for the currently logged in user
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	//Sort the records by descending order based on the sys_created_on date field value
	noteGR.orderByDesc('sys_created_on');
	noteGR.query();
	
	//For each of the Note records returned
	while (noteGR.next()) {
		//Create an empty object, noteObj
		var noteObj = {};
		//Get the display values for the number, title, and sys_id fields and put those values into the noteObj object
		$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
		//Get the first 20 characters of the description field and add that value to the noteObj object
		noteObj.note = noteGR.getValue('note').slice(0,20);
		//Push the noteObj into the notes array
		data.notes.push(noteObj);
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-18 15:14:46</sys_created_on>
        <sys_id>e26230f62fe651103898dc1a2799b68e</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_e26230f62fe651103898dc1a2799b68e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-10-21 11:00:57</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      ${Notes}
    </h3>
  </div>
  <div class="list-group">
    <!-- ng-click for when a user clicks a Note record in the list -->
    <a class="list-group-item" ng-click="c.selectItem($index)" ng-repeat="note in data.notes">
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
